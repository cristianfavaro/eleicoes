# Generated by Django 4.2.3 on 2023-10-04 21:10

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Fund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=100, null=True)),
                ('classe_valor', models.IntegerField(choices=[(0, ''), (1, 'Crédito Privado Até 15 Dias'), (2, 'Alocação Ações'), (3, 'Ações no Exterior'), (4, 'Prefixado Renda Fixa Ativo'), (5, 'Juro Real'), (6, 'Renda Fixa DI'), (7, 'Debênture Incentivada'), (8, 'Ações'), (9, 'Crédito Privado Acima de 16 Dias'), (10, 'Crédito Privado até 15 Dias'), (11, 'Ações Índice'), (12, 'Long & Short'), (13, 'Investimento no Exterior'), (14, 'Multimercado Baixa Volatilidade'), (15, 'Long Biased'), (16, 'Multimercado'), (17, 'Alocação Multimercado')], default=0, verbose_name='Classe Valor')),
                ('denom_social', models.CharField(blank=True, max_length=100, null=True, verbose_name='Denominação Social')),
                ('cnpj_fundo', models.CharField(max_length=20, unique=True, verbose_name='CNPJ do fundo')),
                ('admin', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome do Administrador')),
                ('auditor', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome do Auditor')),
                ('cd_cvm', models.IntegerField(blank=True, null=True, verbose_name='Código CVM')),
                ('classe', models.IntegerField(choices=[(0, ''), (1, 'Fundo Multimercado'), (2, 'Fundo de Ações'), (3, 'Fundo de Renda Fixa'), (4, 'Fundo Cambial'), (5, 'FIDC'), (6, 'FIDC-NP'), (7, 'FIC FIDC'), (8, 'FICFIDC-NP'), (9, 'FMP-FGTS'), (10, 'FIDCFIAGRO'), (11, 'FIP Multi'), (12, 'FIP'), (13, 'FIP CS'), (14, 'FIC FIP'), (15, 'FIP EE'), (16, 'FIP IE'), (17, 'FII'), (18, 'FII-FIAGRO'), (19, 'FIP-FIAGRO'), (20, 'FUNCINE'), (21, 'FIDC-PIPS'), (22, 'FMIEE'), (23, 'Fundo Referenciado'), (24, 'Fundo de Curto Prazo'), (25, 'Fundo da Dívida Externa'), (26, 'FIP PD&I')], null=True, verbose_name='Classe')),
                ('classe_anbima', models.IntegerField(choices=[(0, ''), (1, 'Renda Fixa Duração Livre Grau de Invest.'), (2, 'Renda Fixa Duração Livre Crédito Livre'), (3, 'Ações Invest. no Exterior'), (4, 'Fechados de Ações'), (5, 'Ações Livre'), (6, 'Renda Fixa Duração Baixa Crédito Livre'), (7, 'Renda Fixa Duração Média Grau de Invest.'), (8, 'Renda Fixa Duração Baixa Grau de Invest.'), (9, 'Multimercados Livre'), (10, 'Renda Fixa Dívida Externa'), (11, 'Multimercados Macro'), (12, 'Ações Índice Ativo'), (13, 'Cambial'), (14, 'Ações Valor/Crescimento'), (15, 'Renda Fixa Duração Livre Soberano'), (16, 'Renda Fixa Duração Baixa Soberano'), (17, 'Renda Fixa Duração Alta Grau de Invest.'), (18, 'Multimercados Invest. no Exterior'), (19, 'Multimercados Juros e Moedas'), (20, 'Multimercados Balanceados'), (21, 'Ações Small Caps'), (22, 'Previdência RF Duração Livre Grau de Inv'), (23, 'Ações Indexados'), (24, 'Renda Fixa Duração Média Crédito Livre'), (25, 'Previdência Balanceados de 30-49'), (26, 'Previdência RF Duração Média Grau de Inv'), (27, 'Ações Setoriais'), (28, 'Fundos de Participações'), (29, 'Ações Dividendos'), (30, 'Multimercados Estrat. Específica'), (31, 'Previdência RF Duração Livre Crédito Liv'), (32, 'Renda Fixa Indexados'), (33, 'Previdência Balanceados de 15-30'), (34, 'Previdência RF Duração Baixa Grau de Inv'), (35, 'Previdência Balanceados até 15'), (36, 'Ações FMP - FGTS'), (37, 'Previdência Multimercado Livre'), (38, 'Previdência RF Duração Alta Grau de Inv.'), (39, 'Previdência RF Duração Livre Soberano'), (40, 'Multimercados Dinâmico'), (41, 'Previdência Ações Indexados'), (42, 'Multimercados L/S - Direcional'), (43, 'Fundos de Mono Ação'), (44, 'Previdência RF Indexados'), (45, 'Ações Sustentabilidade/Governança'), (46, 'FII Hibrido Gestão Ativa'), (47, 'Multimercados Trading'), (48, 'Renda Fixa Duração Média Soberano'), (49, 'Previdência Multimercados Juros e Moedas'), (50, 'Previdência Balanceados Data Alvo'), (51, 'Previdência Ações Ativo'), (52, 'Multimercados L/S - Neutro'), (53, 'Previdência RF Duração Baixa Soberano'), (54, 'Multimercados Capital Protegido'), (55, 'Renda Fixa Duração Alta Soberano'), (56, 'Renda Fixa Duração Alta Crédito Livre'), (57, 'Previdência RF Duração Alta Soberano'), (58, 'FIDC Outros'), (59, 'FIDC Fomento Mercantil'), (60, 'Previdência RF Duração Baixa Crédito Liv'), (61, 'FII Renda Gestão Ativa'), (62, 'Previdência RF Data Alvo'), (63, 'Previdência RF Duração Média Soberano'), (64, 'Renda Fixa Invest. no Exterior'), (65, 'Previdência RF Duração Média Crédito Liv'), (66, 'Previdência Balanceados acima de 49'), (67, 'Previdência RF Duração Alta Crédito Livr')], null=True, verbose_name='Classe Anbima')),
                ('cnpj_admin', models.CharField(blank=True, max_length=20, null=True, verbose_name='CNPJ do Administrador')),
                ('cnpj_auditor', models.CharField(blank=True, max_length=20, null=True, verbose_name='CNPJ do Auditor')),
                ('cnpj_controlador', models.CharField(blank=True, max_length=20, null=True, verbose_name='CNPJ do Controlador')),
                ('cnpj_custodiante', models.CharField(blank=True, max_length=20, null=True, verbose_name='CNPJ do Custodiante')),
                ('condom', models.CharField(blank=True, max_length=100, null=True, verbose_name='Forma de condomínio')),
                ('controlador', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome do Controlador')),
                ('cpf_cnpj_gestor', models.CharField(blank=True, max_length=20, null=True, verbose_name='Informa o código de identificação do gestor pessoa física ou jurídica')),
                ('custodiante', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome do Custodiante')),
                ('diretor', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome do Diretor Responsável')),
                ('dt_cancel', models.CharField(blank=True, max_length=10, null=True, verbose_name='Data de cancelamento')),
                ('dt_const', models.CharField(blank=True, max_length=10, null=True, verbose_name='Data de constituição')),
                ('dt_fim_exerc', models.CharField(blank=True, max_length=10, null=True, verbose_name='Data fim do exercício social')),
                ('dt_ini_ativ', models.CharField(blank=True, max_length=10, null=True, verbose_name='Data de início de atividade')),
                ('dt_ini_classe', models.CharField(blank=True, max_length=10, null=True, verbose_name='Data de início na classe')),
                ('dt_ini_exerc', models.CharField(blank=True, max_length=10, null=True, verbose_name='Data início do exercício social')),
                ('dt_ini_sit', models.CharField(blank=True, max_length=10, null=True, verbose_name='Data início da situação')),
                ('dt_patrim_liq', models.CharField(blank=True, max_length=10, null=True, verbose_name='Data do patrimônio líquido')),
                ('dt_reg', models.CharField(blank=True, max_length=10, null=True, verbose_name='Data de registro')),
                ('entid_invest', models.BooleanField(default=None, null=True, verbose_name='Indica se o fundo é entidade de investimento')),
                ('fundo_cotas', models.BooleanField(default=None, null=True, verbose_name='Indica se é fundo de cotas')),
                ('fundo_exclusivo', models.BooleanField(default=None, null=True, verbose_name='Indica se é fundo exclusivo')),
                ('gestor', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome do Gestor')),
                ('inf_taxa_adm', models.TextField(blank=True, null=True, verbose_name='Informações Adicionais (Taxa de administração)')),
                ('inf_taxa_perfm', models.TextField(blank=True, null=True, verbose_name='formações Adicionais (Taxa de performance)')),
                ('invest_cempr_exter', models.BooleanField(null=True, verbose_name='Indica se o fundo pode aplicar 100% dos recursos no exterior')),
                ('pf_pj_gestor', models.CharField(blank=True, max_length=2, null=True, verbose_name='Indica se o gestor é pessoa física ou jurídica')),
                ('publico_alvo', models.CharField(blank=True, max_length=20, null=True, verbose_name='Público-alvo')),
                ('rentab_fundo', models.CharField(blank=True, max_length=100, null=True, verbose_name='Forma de rentabilidade do fundo (indicador de desempenho)')),
                ('sit', models.IntegerField(choices=[(0, ''), (1, 'EM FUNCIONAMENTO NORMAL'), (2, 'EM SITUAÇÃO ESPECIAL'), (3, 'LIQUIDAÇÃO'), (4, 'FASE PRÉ-OPERACIONAL'), (5, 'EM ANÁLISE'), (6, 'INCORPORAÇÃO'), (7, 'CANCELADA')], null=True, verbose_name='Situação')),
                ('taxa_adm', models.FloatField(blank=True, null=True, verbose_name='Taxa de administração')),
                ('taxa_perfm', models.FloatField(blank=True, null=True, verbose_name='Taxa de performance')),
                ('tp_fundo', models.CharField(blank=True, max_length=30, null=True, verbose_name='Tipo de fundo')),
                ('trib_lprazo', models.BooleanField(default=None, null=True, verbose_name='Indica se possui tributação de longo prazo')),
                ('vl_patrim_liq', models.FloatField(blank=True, null=True, verbose_name='Valor do patrimônio líquido')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_id', models.IntegerField(unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('dataEntrega', models.DateTimeField(blank=True, null=True, verbose_name='Data Entrega')),
                ('categoriaDocumento', models.CharField(blank=True, max_length=100, null=True)),
                ('tipoDocumento', models.CharField(blank=True, max_length=100, null=True)),
                ('especieDocumento', models.CharField(blank=True, max_length=100, null=True)),
                ('dataReferencia', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('descricaoStatus', models.CharField(blank=True, max_length=100, null=True)),
                ('analisado', models.CharField(blank=True, max_length=100, null=True)),
                ('situacaoDocumento', models.CharField(blank=True, max_length=100, null=True)),
                ('assuntos', models.CharField(blank=True, max_length=100, null=True)),
                ('altaPrioridade', models.CharField(blank=True, max_length=100, null=True)),
                ('formatoDataReferencia', models.CharField(blank=True, max_length=100, null=True)),
                ('versao', models.CharField(blank=True, max_length=100, null=True)),
                ('modalidade', models.CharField(blank=True, max_length=100, null=True)),
                ('descricaoModalidade', models.CharField(blank=True, max_length=100, null=True)),
                ('nomePregao', models.CharField(blank=True, max_length=100, null=True)),
                ('informacoesAdicionais', models.CharField(blank=True, max_length=100, null=True)),
                ('arquivoEstruturado', models.CharField(blank=True, max_length=100, null=True)),
                ('formatoEstruturaDocumento', models.CharField(blank=True, max_length=100, null=True)),
                ('nomeAdministrador', models.CharField(blank=True, max_length=100, null=True)),
                ('cnpjAdministrador', models.CharField(blank=True, max_length=100, null=True)),
                ('cnpjFundo', models.CharField(blank=True, max_length=100, null=True)),
                ('idTemplate', models.CharField(blank=True, max_length=100, null=True)),
                ('idSelectNotificacaoConvenio', models.CharField(blank=True, max_length=100, null=True)),
                ('idSelectItemConvenio', models.CharField(blank=True, max_length=100, null=True)),
                ('indicadorFundoAtivoB3', models.CharField(blank=True, max_length=100, null=True)),
                ('idEntidadeGerenciadora', models.CharField(blank=True, max_length=100, null=True)),
                ('ofertaPublica', models.CharField(blank=True, max_length=100, null=True)),
                ('numeroEmissao', models.CharField(blank=True, max_length=100, null=True)),
                ('tipoPedido', models.CharField(blank=True, max_length=100, null=True)),
                ('dda', models.CharField(blank=True, max_length=100, null=True)),
                ('fund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='funds.fund')),
            ],
        ),
        migrations.CreateModel(
            name='Star',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequency', models.IntegerField(choices=[(0, ''), (1, 'Daily'), (2, 'Monthly'), (3, 'Bimonthly'), (4, 'Quarterly'), (5, 'Yearly')], default=2)),
                ('value', models.SmallIntegerField(null=True, validators=[django.core.validators.MaxValueValidator(5)])),
                ('date', models.DateField(verbose_name='End Date')),
                ('fund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stars', to='funds.fund')),
            ],
            options={
                'unique_together': {('date', 'fund', 'frequency')},
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequency', models.IntegerField(choices=[(0, ''), (1, 'Daily'), (2, 'Monthly'), (3, 'Bimonthly'), (4, 'Quarterly'), (5, 'Yearly')], default=2)),
                ('value', models.FloatField(null=True)),
                ('date', models.DateField(verbose_name='End Date')),
                ('fund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='funds.fund')),
            ],
            options={
                'unique_together': {('date', 'fund', 'frequency')},
            },
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='End Date')),
                ('frequency', models.IntegerField(choices=[(0, ''), (1, 'Daily'), (2, 'Monthly'), (3, 'Bimonthly'), (4, 'Quarterly'), (5, 'Yearly')])),
                ('metric_type', models.IntegerField(choices=[(0, ''), (1, 'Sharpe 3 anos'), (2, 'Retorno 3 anos')])),
                ('value', models.FloatField(null=True)),
                ('fund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='funds.fund')),
            ],
            options={
                'unique_together': {('date', 'fund', 'frequency', 'metric_type')},
            },
        ),
        migrations.CreateModel(
            name='Guia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.JSONField()),
                ('date', models.DateField()),
                ('fund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guia', to='funds.fund')),
            ],
            options={
                'unique_together': {('date', 'fund')},
            },
        ),
        migrations.CreateModel(
            name='DailyReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('captc_dia', models.FloatField(blank=True, null=True, verbose_name='Captação do dia')),
                ('dt_comptc', models.DateField(verbose_name='Data de competência do documento')),
                ('nr_cotst', models.IntegerField(blank=True, null=True, verbose_name='Número de cotistas')),
                ('resg_dia', models.FloatField(blank=True, null=True, verbose_name='Resgate no dia')),
                ('tp_fundo', models.CharField(blank=True, max_length=15, null=True, verbose_name='Tipo de fundo')),
                ('vl_patrim_liq', models.FloatField(blank=True, null=True, verbose_name='Valor do patrimônio líquido')),
                ('vl_quota', models.DecimalField(blank=True, decimal_places=12, max_digits=27, null=True, verbose_name='Valor da cota')),
                ('vl_total', models.FloatField(blank=True, null=True, verbose_name='Valor total da carteira')),
                ('fund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_data', to='funds.fund')),
            ],
            options={
                'unique_together': {('dt_comptc', 'fund')},
            },
        ),
    ]
